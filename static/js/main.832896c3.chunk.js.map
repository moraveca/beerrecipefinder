{"version":3,"sources":["utils/API.js","pages/Homepage.js","pages/Detail.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["getRecipes","beerName","axios","get","getRecipe","id","Homepage","state","recipes","noResults","clickedSearch","loadRecipes","event","preventDefault","API","then","res","data","length","setState","console","log","catch","err","handleInputChange","target","name","value","this","props","match","params","query","onSubmit","onChange","placeholder","type","className","map","recipe","to","key","description","Component","Detail","malts","hops","yeast","pairings","mash","attenuation","boil","ebc","fermentation","twist","ph","srm","target_fg","target_og","volume","getIngredients","ingredients","malt","forEach","prevState","hop","getFoodPairings","food_pairing","pairing","method","mash_temp","temp","unit","attenuation_level","boil_volume","style","src","image_url","alt","contributed_by","abv","ibu","brewers_tips","index","amount","Header","App","basename","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.832896c3.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getRecipes: beerName => {\n    return axios.get(\"https://api.punkapi.com/v2/beers?beer_name=\" + beerName);\n  },\n  // Gets the book with the given id\n  getRecipe: id => {\n    return axios.get(\"https://api.punkapi.com/v2/beers/\" + id);\n  },\n\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../utils/API\";\n\n\nclass Homepage extends Component {\n  state = {\n    recipes: [],\n    beerName: \"\",\n    noResults: \"\",\n    clickedSearch: false\n  };\n\n  componentDidMount() {\n    if (this.props.match.params.query) {\n      this.loadRecipes(this.props.match.params.query);\n    } else {\n      this.setState({\n        recipes: [],\n        beerName: \"\",\n        noResults: \"\"\n      })\n    }\n  };\n\n  loadRecipes = event => {\n    event.preventDefault();\n    API.getRecipes(this.state.beerName)\n      .then(res => {\n        if (!res.data.length) {\n          console.log(\"no res.data!\")\n          this.setState({\n            recipes: [],\n            noResults: \"No Results\"\n          })\n        } else {\n          this.setState({\n            recipes: res.data\n          });\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <form id=\"search-form\"\n          onSubmit={this.loadRecipes}\n        >\n          <input\n            id=\"input-form\"\n            value={this.state.beerName}\n            onChange={this.handleInputChange}\n            name=\"beerName\"\n            placeholder=\"Beer Name\"\n          />\n          <button\n            id=\"search-button\"\n            type=\"submit\"\n            className=\"btn btn-secondary\">\n            Search\n          </button>\n        </form>\n        {this.state.recipes.length ? (\n          <div className=\"list-group\">\n            {this.state.recipes.map(recipe => (\n              <Link to={\"/recipes/\" + recipe.id} className=\"list-group-item list-group-item-action\" key={recipe.id}>\n                <div className=\"d-flex w-100 justify-content-between\">\n                  <h5 className=\"mb-1\">{recipe.name}</h5>\n                </div>\n                <p className=\"mb-1\">{recipe.description}</p>\n                <small>Click for recipe details.</small>\n              </Link>\n            ))}\n          </div>\n        ) : (\n            <div className=\"list-group\">\n              <h2 className=\"mb-1\">{this.state.noResults}</h2>\n            </div>\n          )}\n      </>\n    );\n  }\n}\n\nexport default Homepage;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\n\n\nclass Detail extends Component {\n    state = {\n        recipe: {},\n        malts: [],\n        hops: [],\n        yeast: [],\n        pairings: [],\n        mash: [],\n        attenuation: 0,\n        boil: [],\n        ebc: 0,\n        fermentation: [],\n        twist: \"\",\n        ph: 0,\n        srm: 0,\n        target_fg: 0,\n        target_og: 0,\n        volume: []\n    };\n    componentDidMount() {\n        API.getRecipe(this.props.match.params.id)\n            .then(res => {\n                console.log(\"res.data: \", res.data)\n                this.setState({ recipe: res.data[0] });\n                console.log(\"this.state.recipe: \", this.state.recipe);\n                this.getIngredients();\n                this.getFoodPairings();\n                this.setState({\n                    mash: [this.state.recipe.method.mash_temp[0].temp.value, this.state.recipe.method.mash_temp[0].temp.unit],\n                    attenuation: this.state.recipe.attenuation_level,\n                    boil: [this.state.recipe.boil_volume.value, this.state.recipe.boil_volume.unit],\n                    ebc: this.state.recipe.ebc,\n                    fermentation: [this.state.recipe.method.fermentation.temp.value, this.state.recipe.method.fermentation.temp.unit],\n                    ph: this.state.recipe.ph,\n                    srm: this.state.recipe.srm,\n                    target_fg: this.state.recipe.target_fg,\n                    target_og: this.state.recipe.target_og,\n                    volume: [this.state.recipe.volume.value, this.state.recipe.volume.unit]\n                })\n                if (this.state.recipe.method.twist) {\n                    this.setState({\n                        twist: this.state.recipe.method.twist\n                    })\n                }\n\n            })\n            .catch(err => console.log(err));\n\n    };\n\n    getIngredients = () => {\n        console.log(\"ingredients in state: \", this.state.recipe.ingredients);\n        this.state.recipe.ingredients.malt.forEach(malt => {\n            this.setState(prevState => ({\n                malts: [...prevState.malts, malt]\n            }))\n        });\n        console.log(\"malts: \", this.state.malts);\n        this.state.recipe.ingredients.hops.forEach(hop => {\n            this.setState(prevState => ({\n                hops: [...prevState.hops, hop]\n            }))\n        });\n        console.log(\"hops: \", this.state.hops);\n\n        this.setState({\n            yeast: this.state.recipe.ingredients.yeast\n        })\n        console.log(\"yeast: \", this.state.yeast)\n    };\n\n    getFoodPairings = () => {\n        this.state.recipe.food_pairing.forEach(pairing => {\n            this.setState(prevState => ({\n                pairings: [...prevState.pairings, pairing]\n            }))\n        });\n        console.log(\"pairings: \", this.state.pairings);\n\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"card mb-3 border-0\" id=\"intro-box\" style={{ \"maxWidth\": \"700px\" }}>\n                    <div className=\"row\">\n                        <div className=\"col-md-3\">\n                            <img src={this.state.recipe.image_url} className=\"card-img\" id=\"beer-image\" alt=\"beer\" />\n                        </div>\n                        <div className=\"col-md-9\">\n                            <div className=\"card-body\">\n                                <h1 className=\"card-title\">{this.state.recipe.name}</h1>\n                                <p className=\"card-text\"><small className=\"text-muted\">Contributed by: {this.state.recipe.contributed_by}</small></p>\n                                <p className=\"card-text\"><b>ABV: </b>{this.state.recipe.abv}%</p>\n                                <p className=\"card-text\"><b>IBU: </b>{this.state.recipe.ibu}</p>\n                                <p className=\"card-text\"><b>Description: </b>{this.state.recipe.description}</p>\n                                <p className=\"card-text\"><b>Brewer's Tips:</b> {this.state.recipe.brewers_tips}</p>\n                                <p className=\"card-text\"><b>Food Pairings:</b></p>\n                                <ul>\n                                    {this.state.pairings.map((pairing, index) => (\n                                        <li key={index}>{pairing}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"card-group\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h3 className=\"card-title text-center\">Hops</h3>\n                            <ul className=\"list-group list-group-flush\">\n                                {this.state.hops.map((hop, index) => (\n                                    <li className=\"list-group-item\" key={index}>{hop.name} - {hop.amount.value} {hop.amount.unit}</li>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h3 className=\"card-title text-center\">Malt</h3>\n                            <ul className=\"list-group list-group-flush\">\n                                {this.state.malts.map((malt, index) => (\n                                    <li className=\"list-group-item\" key={index}>{malt.name} - {malt.amount.value} {malt.amount.unit}</li>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h3 className=\"card-title text-center\">Yeast</h3>\n                            <ul className=\"list-group list-group-flush\">\n                                <li className=\"list-group-item\">{this.state.yeast}</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"card-body\">\n                    <div className=\"card border-0\">\n                        <h1 className=\"card-title text-center\">Methods</h1>\n                        <p className=\"card-text\"><b>Batch Size:</b> {this.state.volume[0]} {this.state.volume[1]}</p>\n                        <p className=\"card-text\"><b>Boil Volume:</b> {this.state.boil[0]} {this.state.boil[1]}</p>\n                        <p className=\"card-text\"><b>OG:</b> {this.state.target_og}</p>\n                        <p className=\"card-text\"><b>FG:</b> {this.state.target_fg}</p>\n                        <p className=\"card-text\"><b>Mash temperature:</b> {this.state.mash[0]}&#176; {this.state.mash[1]}</p>\n                        <p className=\"card-text\"><b>Fermentation temperature:</b> {this.state.fermentation[0]}&#176; {this.state.fermentation[1]}</p>\n                        <p className=\"card-text\"><b>Attenuation Level:</b> {this.state.attenuation}</p>\n                        {this.state.twist.length ? (<p className=\"card-text\"><b>Recipe Twist:</b> {this.state.twist}</p>) : (<></>)}\n\n                        {/* <p className=\"card-text\"><b>ph:</b> {this.state.ph}</p> */}\n                        {/* <p className=\"card-text\">EBC: {this.state.ebc}</p> */}\n                        {/* <p className=\"card-text\">SRM: {this.state.srm}</p> */}\n\n\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Header() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n        <h1 className=\"display-4\">Beer Recipe Finder</h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Homepage from \"./pages/Homepage\";\nimport Detail from \"./pages/Detail\";\nimport Header from \"./components/Header\"\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Homepage} />\n          {/* <Route exact path=\"/search/:query\" component={Homepage} /> */}\n          <Route exact path=\"/recipes/:id\" component={Detail} />\n          {/* <Route component={NoMatch} /> */}\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}